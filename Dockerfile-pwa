FROM node:16-bullseye as builder

EXPOSE 8080

WORKDIR /padloc

# Only copy over the packages files of all required packages.
# This will ensure that we don't have to install all dependencies
# again if any source files change.
COPY package*.json lerna.json tsconfig.json ./
COPY packages/pwa/package*.json ./packages/pwa/
COPY packages/app/package*.json ./packages/app/
COPY packages/core/package*.json ./packages/core/
COPY packages/locale/package*.json ./packages/locale/

# Install dependencies and bootstrap packages
RUN npm ci --unsafe-perm

# Now copy over source files
COPY packages/pwa/src ./packages/pwa/src
COPY packages/pwa/tsconfig.json packages/pwa/webpack.config.js ./packages/pwa/
COPY packages/app/src ./packages/app/src
COPY packages/app/types ./packages/app/types
COPY packages/app/tsconfig.json ./packages/app/
COPY packages/core/src ./packages/core/src
COPY packages/core/vendor ./packages/core/vendor
COPY packages/core/tsconfig.json ./packages/core/
COPY packages/locale/src ./packages/locale/src
COPY packages/locale/res ./packages/locale/res
COPY packages/locale/tsconfig.json ./packages/locale/

COPY assets /assets

WORKDIR /padloc/packages/pwa

# Build the application
ENTRYPOINT ["npm", "run"]

CMD ["build_and_start"]

FROM node:16-bullseye

WORKDIR /padloc/packages/pwa

# Copy only the build artifacts from the previous stage
COPY --from=builder /padloc/packages/pwa/ .

ENTRYPOINT ["npm"]

CMD ["run", "start"]
